---
- name: Ensure snapd is installed.
  package:
    name: snapd
    state: present
  register: snapd_install

- name: Ensure snapd is enabled.
  systemd:
    name: snapd.socket
    enabled: true
    state: started

- name: Enable classic snap support.
  file:
    src: /var/lib/snapd/snap
    dest: /snap
    state: link
  when: ansible_os_family != "Debian"

- name: Update snap after install.
  shell: snap install core; snap refresh core
  changed_when: true
  failed_when: false
  when: snapd_install is changed

- name: Install certbot via snap.
  snap:
    name: certbot
    classic: true

- name: Symlink certbot into place.
  file:
    src: /snap/bin/certbot
    dest: /usr/bin/certbot
    state: link
  ignore_errors: "{{ ansible_check_mode }}"

- name: Set Certbot script variable.
  set_fact:
    certbot_script: /usr/bin/certbot

- name: Obtain certificates for domains
  shell: |
    certbot certonly \
      --non-interactive \
      --agree-tos \
      {% for domain in service.domains %}
          -d {{ domain }} \
      {% endfor %}
      -m devops@karlson.dev
  args:
    creates: "/etc/letsencrypt/live/{{ service.domains[0] }}"
  when: dontcertbot is not defined or not dontcertbot
  loop: "{{ nginx_sites }}"
  loop_control:
    loop_var: service
  tags: certbot

- name: Create nginx systemd unit dir
  file:
    name: /etc/systemd/system/nginx.service.d/
    state: directory

- name: Set up certificate renewal
  cron:
    name: cert-renew
    job: /usr/local/bin/certbot --quiet renew --renew-hook "systemctl reload nginx"
    minute: 45
    hour: 2
    day: 25
    month: '*/2'
    weekday: '*'
    state: present
